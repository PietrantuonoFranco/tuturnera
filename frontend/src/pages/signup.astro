---
import Layout from "../layouts/Layout.astro";


---

<Layout title="Tuturnera - Signup">
  <main class="min-h-screen w-full">
    <div class="h-full w-full flex flex-col justify-center items-center">
      <div class="md:w-3/5 mt-6 py-8 px-4 md:px-12 border-2 border-tuturnera-dark-gray bg-tuturnera-white shadow-md rounded-3xl flex flex-col justify-center items-center space-y-2">
        <h1 class="text-3xl font-bold">WELCOME!</h1>
        <h2 class="text-lg font-semibold">Register your account</h2>

       <p id="message-box" class="w-full my-1 py-1 px-2 border-l-3 hidden"></>

        <form action="" class="w-full mt-4 flex flex-col justify-center items-center space-y-4">
          <div class="w-full grid md:grid-cols-2 gap-4">
            <div class="w-full flex-flex-col jutify-center items-center space-y-4">
              <div class="w-full space-y-2">
                <label for="email" class="pl-5 text-tuturnera-dark-gray font-semibold">Email <span class="text-lg text-red-400 font-semibold">*</span> </label>
                <input id="email" type="text" class="w-full py-2 px-5 rounded-3xl border-2 border-tuturnera-blue hover:border-tuturnera-light-green hover:shadow-sm focus:shadow-sm focus:border-tuturnera-light-green focus:outline-1 focus:outline-tuturnera-light-green transition-all duration-300 ease-in-out">
              </div>
    
              <div class="w-full space-y-2">
                <label for="name" class="pl-5 text-tuturnera-dark-gray font-semibold">Name <span class="text-lg text-red-400 font-semibold">*</span></label>
                <input id="name" type="text" class="w-full py-2 px-5 rounded-3xl border-2 border-tuturnera-blue hover:border-tuturnera-light-green hover:shadow-sm focus:shadow-sm focus:border-tuturnera-light-green focus:outline-1 focus:outline-tuturnera-light-green transition-all duration-300 ease-in-out">
              </div>
    
              <div class="w-full space-y-2">
                <label for="surname" class="pl-5 text-tuturnera-dark-gray font-semibold">Surname <span class="text-lg text-red-400 font-semibold">*</span></label>
                <input id="surname" type="text" class="w-full py-2 px-5 rounded-3xl border-2 border-tuturnera-blue hover:border-tuturnera-light-green hover:shadow-sm focus:shadow-sm focus:border-tuturnera-light-green focus:outline-1 focus:outline-tuturnera-light-green transition-all duration-300 ease-in-out">
              </div>
            </div>

            <div class="w-full flex-flex-col jutify-center items-center space-y-4">
              <div class="w-full space-y-2"> <!-- AumentÃ© space-y-1 a space-y-2 -->
                <label for="password" class="pl-5 text-tuturnera-dark-gray font-semibold">Password <span class="text-lg text-red-400 font-semibold">*</span></label>
                
                <div class="w-full relative">
                  <!-- Input con padding derecho para el icono -->
                  <input 
                    id="password" 
                    type="password" 
                    class="w-full py-2 px-5 pr-10 rounded-3xl border-2 border-tuturnera-blue hover:border-tuturnera-light-green hover:shadow-sm focus:shadow-sm focus:border-tuturnera-light-green focus:outline-1 focus:outline-tuturnera-light-green transition-all duration-300 ease-in-out"
                  >
                  
                  <!-- Contenedor de iconos alineado correctamente -->
                  <div id="pass-eyes-container" class="absolute right-3 top-1/2 transform -translate-y-1/2 flex justify-center items-center space-x-1 group">
                    <!-- Ojo abierto -->
                    <svg 
                      xmlns="http://www.w3.org/2000/svg" 
                      class="w-5 h-5 text-tuturnera-blue cursor-pointer group-hover:text-tuturnera-dark-green hidden" 
                      width="30" 
                      height="30" 
                      viewBox="0 0 24 24"
                    >
                      <g fill="none" stroke="currentColor" stroke-width="1.5">
                        <path d="M3.275 15.296C2.425 14.192 2 13.639 2 12c0-1.64.425-2.191 1.275-3.296C4.972 6.5 7.818 4 12 4s7.028 2.5 8.725 4.704C21.575 9.81 22 10.361 22 12c0 1.64-.425 2.191-1.275 3.296C19.028 17.5 16.182 20 12 20s-7.028-2.5-8.725-4.704Z"/>
                        <path d="M15 12a3 3 0 1 1-6 0a3 3 0 0 1 6 0Z"/>
                      </g>
                    </svg>
                    
                    <!-- Ojo cerrado -->
                    <svg 
                      xmlns="http://www.w3.org/2000/svg" 
                      class="w-5 h-5 mt-1 mr-1 text-tuturnera-blue cursor-pointer group-hover:text-tuturnera-dark-green" 
                      width="30" 
                      height="30" 
                      viewBox="0 0 24 24"
                    >
                      <path fill="currentColor" d="M2.69 6.705a.75.75 0 0 0-1.38.59zm12.897 6.624l-.274-.698zm-6.546.409a.75.75 0 1 0-1.257-.818zm-2.67 1.353a.75.75 0 1 0 1.258.818zM22.69 7.295a.75.75 0 0 0-1.378-.59zM19 11.13l-.513-.547zm.97 2.03a.75.75 0 1 0 1.06-1.06zm-8.72 3.34a.75.75 0 0 0 1.5 0zm5.121-.591a.75.75 0 1 0 1.258-.818zm-10.84-4.25A.75.75 0 0 0 4.47 10.6zm-2.561.44a.75.75 0 0 0 1.06 1.06zM12 13.25c-3.224 0-5.539-1.605-7.075-3.26a13.6 13.6 0 0 1-1.702-2.28a12 12 0 0 1-.507-.946l-.022-.049l-.004-.01l-.001-.001L2 7l-.69.296h.001l.001.003l.003.006l.04.088q.039.088.117.243c.103.206.256.496.462.841c.41.69 1.035 1.61 1.891 2.533C5.54 12.855 8.224 14.75 12 14.75zm3.313-.62c-.97.383-2.071.62-3.313.62v1.5c1.438 0 2.725-.276 3.862-.723zm-7.529.29l-1.413 2.17l1.258.818l1.412-2.171zM22 7l-.69-.296h.001v.002l-.007.013l-.028.062a12 12 0 0 1-.64 1.162a13.3 13.3 0 0 1-2.15 2.639l1.027 1.094a14.8 14.8 0 0 0 3.122-4.26l.039-.085l.01-.024l.004-.007v-.003h.001v-.001zm-3.513 3.582c-.86.806-1.913 1.552-3.174 2.049l.549 1.396c1.473-.58 2.685-1.444 3.651-2.351zm-.017 1.077l1.5 1.5l1.06-1.06l-1.5-1.5zM11.25 14v2.5h1.5V14zm3.709-.262l1.412 2.171l1.258-.818l-1.413-2.171zm-10.49-3.14l-1.5 1.5L4.03 13.16l1.5-1.5z"/>
                    </svg>
                  </div>
                </div>
    
                <div class="w-full space-y-2">
                  <label for="repeated-password" class="pl-5 text-tuturnera-dark-gray font-semibold">Repeat your password <span class="text-lg text-red-400 font-semibold">*</span></label>
                  <div class="w-full relative">
                    <!-- Input con padding derecho para el icono -->
                    <input 
                      id="repeated-password" 
                      type="password" 
                      class="w-full py-2 px-5 pr-10 rounded-3xl border-2 border-tuturnera-blue hover:border-tuturnera-light-green hover:shadow-sm focus:shadow-sm focus:border-tuturnera-light-green focus:outline-1 focus:outline-tuturnera-light-green transition-all duration-300 ease-in-out"
                    >
                    
                    <!-- Contenedor de iconos alineado correctamente -->
                    <div id="rep-pass-eyes-container" class="absolute right-3 top-1/2 transform -translate-y-1/2 flex justify-center items-center space-x-1 group">
                      <!-- Ojo abierto -->
                      <svg 
                        xmlns="http://www.w3.org/2000/svg" 
                        class="w-5 h-5 text-tuturnera-blue cursor-pointer group-hover:text-tuturnera-dark-green hidden" 
                        width="30" 
                        height="30" 
                        viewBox="0 0 24 24"
                      >
                        <g fill="none" stroke="currentColor" stroke-width="1.5">
                          <path d="M3.275 15.296C2.425 14.192 2 13.639 2 12c0-1.64.425-2.191 1.275-3.296C4.972 6.5 7.818 4 12 4s7.028 2.5 8.725 4.704C21.575 9.81 22 10.361 22 12c0 1.64-.425 2.191-1.275 3.296C19.028 17.5 16.182 20 12 20s-7.028-2.5-8.725-4.704Z"/>
                          <path d="M15 12a3 3 0 1 1-6 0a3 3 0 0 1 6 0Z"/>
                        </g>
                      </svg>
                      
                      <!-- Ojo cerrado -->
                      <svg 
                        xmlns="http://www.w3.org/2000/svg" 
                        class="w-5 h-5 mt-1 mr-1 text-tuturnera-blue cursor-pointer group-hover:text-tuturnera-dark-green" 
                        width="30" 
                        height="30" 
                        viewBox="0 0 24 24"
                      >
                        <path fill="currentColor" d="M2.69 6.705a.75.75 0 0 0-1.38.59zm12.897 6.624l-.274-.698zm-6.546.409a.75.75 0 1 0-1.257-.818zm-2.67 1.353a.75.75 0 1 0 1.258.818zM22.69 7.295a.75.75 0 0 0-1.378-.59zM19 11.13l-.513-.547zm.97 2.03a.75.75 0 1 0 1.06-1.06zm-8.72 3.34a.75.75 0 0 0 1.5 0zm5.121-.591a.75.75 0 1 0 1.258-.818zm-10.84-4.25A.75.75 0 0 0 4.47 10.6zm-2.561.44a.75.75 0 0 0 1.06 1.06zM12 13.25c-3.224 0-5.539-1.605-7.075-3.26a13.6 13.6 0 0 1-1.702-2.28a12 12 0 0 1-.507-.946l-.022-.049l-.004-.01l-.001-.001L2 7l-.69.296h.001l.001.003l.003.006l.04.088q.039.088.117.243c.103.206.256.496.462.841c.41.69 1.035 1.61 1.891 2.533C5.54 12.855 8.224 14.75 12 14.75zm3.313-.62c-.97.383-2.071.62-3.313.62v1.5c1.438 0 2.725-.276 3.862-.723zm-7.529.29l-1.413 2.17l1.258.818l1.412-2.171zM22 7l-.69-.296h.001v.002l-.007.013l-.028.062a12 12 0 0 1-.64 1.162a13.3 13.3 0 0 1-2.15 2.639l1.027 1.094a14.8 14.8 0 0 0 3.122-4.26l.039-.085l.01-.024l.004-.007v-.003h.001v-.001zm-3.513 3.582c-.86.806-1.913 1.552-3.174 2.049l.549 1.396c1.473-.58 2.685-1.444 3.651-2.351zm-.017 1.077l1.5 1.5l1.06-1.06l-1.5-1.5zM11.25 14v2.5h1.5V14zm3.709-.262l1.412 2.171l1.258-.818l-1.413-2.171zm-10.49-3.14l-1.5 1.5L4.03 13.16l1.5-1.5z"/>
                      </svg>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>


          <button id="register-button" type="submit" class="tuturnera-button w-full mt-6 hover:shadow-md border-2 border-tuturnera-blue bg-green-gradient text-tuturnera-blue py-2 font-semibold">Register</button>

          
          <p class="mt-1 text-sm">Already have an account? <a href="/login" class="relative group font-semibold text-tuturnera-dark-green transition-all duration-300 ease-in-out">Sign in!<span class="absolute inset-x-0 -bottom-0.5 h-0.5 bg-tuturnera-dark-green scale-x-0 transition-transform group-hover:scale-x-100"></span></a></p>
        </form>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Seleccionamos los elementos del DOM con tipos adecuados
  const passwordInput: HTMLInputElement | null = document.getElementById('password') as HTMLInputElement;
  const repeatedPasswordInput: HTMLInputElement | null = document.getElementById('repeated-password') as HTMLInputElement;
  const passEyeIcons: NodeListOf<SVGSVGElement> = document.querySelectorAll('#pass-eyes-container svg');
  const repPassEyeIcons: NodeListOf<SVGSVGElement> = document.querySelectorAll('#rep-pass-eyes-container svg');

  // Verificamos que los elementos existan
  if (passwordInput && passEyeIcons.length > 0) {
    // AÃ±adimos event listeners a cada icono
    passEyeIcons.forEach((icon: SVGSVGElement) => {
      icon.addEventListener('click', () => {
        // Cambiamos el tipo de input
        const isPassword: boolean = passwordInput.type === 'password';
        passwordInput.type = isPassword ? 'text' : 'password';
        
        // Alternamos la visibilidad de los iconos
        passEyeIcons.forEach((i: SVGSVGElement) => i.classList.toggle('hidden'));
      });
    });
  }

  if (repeatedPasswordInput && repPassEyeIcons.length > 0) {
    // AÃ±adimos event listeners a cada icono
    repPassEyeIcons.forEach((icon: SVGSVGElement) => {
      icon.addEventListener('click', () => {
        // Cambiamos el tipo de input
        const isPassword: boolean = repeatedPasswordInput.type === 'password';
        repeatedPasswordInput.type = isPassword ? 'text' : 'password';
        
        // Alternamos la visibilidad de los iconos
        repPassEyeIcons.forEach((i: SVGSVGElement) => i.classList.toggle('hidden'));
      });
    });
  }
</script>

<script>
  import { getRoleById } from "src/api/roles";
  import { createUser } from "src/api/users";
  import 'dotenv/config';

  // Inputs
  const emailInput: HTMLInputElement | null = document.getElementById ('email') as HTMLInputElement;
  const nameInput: HTMLInputElement | null = document.getElementById ('name') as HTMLInputElement;
  const surnameInput: HTMLInputElement | null = document.getElementById ('surname') as HTMLInputElement;
  const passwordInput: HTMLInputElement | null = document.getElementById ('password') as HTMLInputElement;
  const repeatedPasswordInput: HTMLInputElement | null = document.getElementById ('repeated-password') as HTMLInputElement;

  // Button
  const registerButton: HTMLInputElement | null = document.getElementById ('register-button') as HTMLInputElement;  
  
  registerButton.addEventListener('click', (e) => {
    e.preventDefault();
    
    const email = emailInput.value;
    const name = nameInput.value;
    const surname = surnameInput.value;
    const password = passwordInput.value;
    const repeatedPassword = repeatedPasswordInput.value;

    if (!email || !name || !surname || !password || !repeatedPassword) {
      setErrorMessage("You must complete all the inputs");
    } else {
      if (password !== repeatedPassword) {
        setErrorMessage("Passwords don't match");
      } else {
        registerUser (email, name, surname, password);

        setOkMessage();
      }
    }
    
  });

  function setErrorMessage(message: string): void {
    const messageBox: HTMLParagraphElement | null = document.getElementById ('message-box') as HTMLParagraphElement;

    messageBox.classList.add('text-red-600');
    messageBox.classList.add('border-red-600');
    messageBox.classList.add('bg-red-gradient');
    messageBox.classList.remove('hidden');

    messageBox.innerHTML = '';
    messageBox.innerHTML = message;
  }

  function setOkMessage(): void {
    const messageBox: HTMLParagraphElement | null = document.getElementById ('message-box') as HTMLParagraphElement;

      if (messageBox.classList.contains('text-red-600')) {
        messageBox.classList.remove('text-red-600');
        messageBox.classList.remove('border-red-600');
        messageBox.classList.remove('bg-red-gradient');
      }

      messageBox.classList.add('text-tuturnera-dark-green');
      messageBox.classList.add('border-tuturnera-dark-green');
      messageBox.classList.add('bg-green-gradient-message');

      if (messageBox.classList.contains('hidden')) {
        messageBox.classList.remove('hidden');
      }

      messageBox.innerHTML = '';
      messageBox.innerHTML = 'Usuario registrado exitosamente.';
  }

  async function registerUser (email: string, name: string, surname: string, password: string) {
    try {
      const id: number = parseInt(process.env.CLIENT_ROLE_ID || "0");

      if (isNaN(id)) {
        throw new Error("CLIENT_ROLE_ID must be a valid number");
      }

      const role = await getRoleById(id);

      if (!role) {
        throw new Error("Doesn't exist a role with that ID");
      }

      await createUser({ 
        email, 
        name, 
        surname, 
        password, 
        role
      });
    } catch (error: any) {
      console.error("Error:", error.message);
    }
  }
</script>